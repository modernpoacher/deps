"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.gitRevParse=gitRevParse;exports.gitCheckout=gitCheckout;exports.gitPull=gitPull;exports.gitPush=gitPush;exports.gitAdd=gitAdd;exports.gitCommit=gitCommit;var _debug=_interopRequireDefault(require("debug"));var _child_process=require("child_process");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const OPTIONS={maxBuffer:1024*2000};const log=(0,_debug.default)('@modernpoacher/deps');function gitRevParse(p){log('gitRevParse');return new Promise((resolve,reject)=>{const{stdout,stderr}=(0,_child_process.exec)('git rev-parse --show-toplevel',{...OPTIONS,cwd:p},(e,v='')=>!e?resolve(v.trim()):reject(e));stdout.on('data',data=>{const s=data.trim();if(s===p)return;(0,_debug.default)('@modernpoacher/deps:gitRevParse')(s);});stderr.on('data',data=>{const s=data.trim();if(s===p||s.startsWith('fatal: not a git repository'))return;(0,_debug.default)('@modernpoacher/deps:gitRevParse')(s);});});}function gitCheckout(p='.',b='master'){log('gitCheckout');return new Promise((resolve,reject)=>{const{stdout,stderr}=(0,_child_process.exec)(`cd "${p}" && git checkout ${b}`,{...OPTIONS,cwd:p},(e,v)=>!e?resolve(v):reject(e));stdout.on('data',data=>(0,_debug.default)('@modernpoacher/deps:gitCheckout')(data.trim()));stderr.on('data',data=>(0,_debug.default)('@modernpoacher/deps:gitCheckout')(data.trim()));});}function gitPull(p='.'){log('gitPull');return new Promise((resolve,reject)=>{const{stdout,stderr}=(0,_child_process.exec)(`cd "${p}" && git pull`,{...OPTIONS,cwd:p},(e,v)=>!e?resolve(v):reject(e));stdout.on('data',data=>(0,_debug.default)('@modernpoacher/deps:gitPull')(data.trim()));stderr.on('data',data=>(0,_debug.default)('@modernpoacher/deps:gitPull')(data.trim()));});}function gitPush(p='.'){log('gitPush');return new Promise((resolve,reject)=>{const{stdout,stderr}=(0,_child_process.exec)(`cd "${p}" && git push`,{...OPTIONS,cwd:p},(e,v)=>!e?resolve(v):reject(e));stdout.on('data',data=>(0,_debug.default)('@modernpoacher/deps:gitPush')(data.trim()));stderr.on('data',data=>(0,_debug.default)('@modernpoacher/deps:gitPush')(data.trim()));});}function gitAdd(p='.',a='package.json package-lock.json'){log('gitAdd');return new Promise((resolve,reject)=>{const{stdout,stderr}=(0,_child_process.exec)(`cd "${p}" && git add ${a}`,{...OPTIONS,cwd:p},(e,v)=>!e?resolve(v):reject(e));stdout.on('data',data=>(0,_debug.default)('@modernpoacher/deps:gitPush')(data.trim()));stderr.on('data',data=>(0,_debug.default)('@modernpoacher/deps:gitPush')(data.trim()));});}function gitCommit(p='.',m='Updated `package.json` &/ `package-lock.json`'){log('gitCommit');return new Promise((resolve,reject)=>{const{stdout,stderr}=(0,_child_process.exec)(`cd "${p}" && git commit -m '${m}'`,{...OPTIONS,cwd:p},(e,v)=>!e?resolve(v):reject(e));stdout.on('data',data=>(0,_debug.default)('@modernpoacher/deps:gitPush')(data.trim()));stderr.on('data',data=>(0,_debug.default)('@modernpoacher/deps:gitPush')(data.trim()));});}