"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.gitRevParse=gitRevParse;exports.gitCheckout=gitCheckout;exports.gitPull=gitPull;exports.gitPush=gitPush;exports.gitAdd=gitAdd;exports.gitCommit=gitCommit;var _child_process=require("child_process");const OPTIONS={maxBuffer:1024*1024};const log=console.log;function gitRevParse(p){log('gitRevParse');return new Promise((resolve,reject)=>{(0,_child_process.exec)('git rev-parse --show-toplevel',{...OPTIONS,cwd:p,stdio:'inherit'},(e,v='')=>!e?resolve(v.trim()):reject(e));});}function gitCheckout(p='.',b='master'){log('gitCheckout');return new Promise((resolve,reject)=>{(0,_child_process.exec)(`cd '${p}' && git checkout ${b}`,{...OPTIONS,cwd:p,stdio:'inherit'},(e,v)=>!e?resolve(v):reject(e));});}function gitPull(p='.'){log('gitPull');return new Promise((resolve,reject)=>{(0,_child_process.exec)(`cd '${p}' && git pull`,{...OPTIONS,cwd:p,stdio:'inherit'},(e,v)=>!e?resolve(v):reject(e));});}function gitPush(p='.'){log('gitPush');return new Promise((resolve,reject)=>{(0,_child_process.exec)(`cd '${p}' && git push`,{...OPTIONS,cwd:p,stdio:'inherit'},(e,v)=>!e?resolve(v):reject(e));});}function gitAdd(p='.',a='package.json package-lock.json'){log('gitAdd');return new Promise((resolve,reject)=>{(0,_child_process.exec)(`cd '${p}' && git add ${a}`,{...OPTIONS,cwd:p,stdio:'inherit'},(e,v)=>!e?resolve(v):reject(e));});}function gitCommit(p='.',m='Updated `package.json` &/ `package-lock.json`'){log('gitCommit');return new Promise((resolve,reject)=>{(0,_child_process.exec)(`cd '${p}' && git commit -m '${m}'`,{...OPTIONS,cwd:p,stdio:'inherit'},(e,v)=>!e?resolve(v):reject(e));});}