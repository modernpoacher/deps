"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.gitRevParse=gitRevParse;exports.gitCheckout=gitCheckout;exports.gitPull=gitPull;exports.gitPush=gitPush;exports.gitAdd=gitAdd;exports.gitCommit=gitCommit;var _debug=_interopRequireDefault(require("debug"));var _child_process=require("child_process");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const OPTIONS={maxBuffer:1024*2000};const log=(0,_debug.default)('@modernpoacher/deps');const use=l=>d=>l(d.trim());function gitRevParse(p){log('gitRevParse');return new Promise((resolve,reject)=>{const{stdout,stderr}=(0,_child_process.exec)('git rev-parse --show-toplevel',{...OPTIONS,cwd:p},(e,v='')=>!e?resolve(v.trim()):reject(e));stdout.on('data',(l=>d=>{const s=d.trim();if(s!==p)return;l(s);})((0,_debug.default)('@modernpoacher/deps:gitRevParse')));stderr.on('data',(l=>d=>{const s=d.trim();if(s===p||s.startsWith('fatal: not a git repository'))return;l(s);})((0,_debug.default)('@modernpoacher/deps:gitRevParse')));});}function gitCheckout(p='.',b='master'){log('gitCheckout');return new Promise((resolve,reject)=>{const{stdout,stderr}=(0,_child_process.exec)(`cd '${p}' && git checkout ${b}`,{...OPTIONS,cwd:p},(e,v)=>!e?resolve(v):reject(e));const log=(0,_debug.default)('@modernpoacher/deps:gitCheckout');stdout.on('data',use(log));stderr.on('data',use(log));});}function gitPull(p='.'){log('gitPull');return new Promise((resolve,reject)=>{const{stdout,stderr}=(0,_child_process.exec)(`cd '${p}' && git pull`,{...OPTIONS,cwd:p},(e,v)=>!e?resolve(v):reject(e));const log=(0,_debug.default)('@modernpoacher/deps:gitPull');stdout.on('data',use(log));stderr.on('data',use(log));});}function gitPush(p='.'){log('gitPush');return new Promise((resolve,reject)=>{const{stdout,stderr}=(0,_child_process.exec)(`cd '${p}' && git push`,{...OPTIONS,cwd:p},(e,v)=>!e?resolve(v):reject(e));const log=(0,_debug.default)('@modernpoacher/deps:gitPush');stdout.on('data',use(log));stderr.on('data',use(log));});}function gitAdd(p='.',a='package.json package-lock.json'){log('gitAdd');return new Promise((resolve,reject)=>{const{stdout,stderr}=(0,_child_process.exec)(`cd '${p}' && git add ${a}`,{...OPTIONS,cwd:p},(e,v)=>!e?resolve(v):reject(e));const log=(0,_debug.default)('@modernpoacher/deps:gitAdd');stdout.on('data',use(log));stderr.on('data',use(log));});}function gitCommit(p='.',m='Updated `package.json` &/ `package-lock.json`'){log('gitCommit');return new Promise((resolve,reject)=>{const{stdout,stderr}=(0,_child_process.exec)(`cd '${p}' && git commit -m '${m}'`,{...OPTIONS,cwd:p},(e,v)=>!e?resolve(v):reject(e));const log=(0,_debug.default)('@modernpoacher/deps:gitCommit');stdout.on('data',use(log));stderr.on('data',use(log));});}