"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.getInstallSaveBundleCommands=getInstallSaveBundleCommands;exports.getInstallSaveOptionalCommands=getInstallSaveOptionalCommands;exports.getInstallSaveDevCommands=getInstallSaveDevCommands;exports.getInstallSaveProdCommands=getInstallSaveProdCommands;exports.installSaveBundleExact=installSaveBundleExact;exports.installSaveBundle=installSaveBundle;exports.installSaveOptionalExact=installSaveOptionalExact;exports.installSaveOptional=installSaveOptional;exports.installSaveDevExact=installSaveDevExact;exports.installSaveDev=installSaveDev;exports.installSaveProdExact=installSaveProdExact;exports.installSaveProd=installSaveProd;exports.executeBundle=executeBundle;exports.executeOptional=executeOptional;exports.executeDev=executeDev;exports.executeProd=executeProd;exports.getInstallCommands=void 0;var _debug=_interopRequireDefault(require("debug"));var _child_process=require("child_process");var _common=require("./common");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const log=(0,_debug.default)('@modernpoacher/deps');log('`deps` is awake');const getInstallCommands=(p,c,r,e)=>`
npm i ${(0,_common.transform)(p,c).concat(r?`--registry ${r}`:'').concat(e?'--save-exact':'')}
`;exports.getInstallCommands=getInstallCommands;function getInstallSaveBundleCommands(p,c,r,e=false){log('getInstallSaveBundleCommands');return getInstallCommands(p,c,r,e).concat('--save-bundle');}function getInstallSaveOptionalCommands(p,c,r,e=false){log('getInstallSaveOptionalCommands');return getInstallCommands(p,c,r,e).concat('--save-optional');}function getInstallSaveDevCommands(p,c,r,e=false){log('getInstallSaveDevCommands');return getInstallCommands(p,c,r,e).concat('--save-dev');}function getInstallSaveProdCommands(p,c,r,e=false){log('getInstallSaveProdCommands');return getInstallCommands(p,c,r,e).concat('--save-prod');}function installSaveBundleExact(d,p,c,r){log('installSaveBundleExact');return new Promise((resolve,reject)=>{const commands=(0,_common.getCommands)(d,getInstallSaveBundleCommands(p,c,r,true));(0,_child_process.spawn)('/bin/bash',commands,{shell:true,stdio:'inherit'},e=>!e?resolve():reject(e)).on('close',resolve).on('error',reject);});}function installSaveBundle(d,p,c,r){log('installSaveBundle');return new Promise((resolve,reject)=>{const commands=(0,_common.getCommands)(d,getInstallSaveBundleCommands(p,c,r));(0,_child_process.spawn)('/bin/bash',commands,{shell:true,stdio:'inherit'},e=>!e?resolve():reject(e)).on('close',resolve).on('error',reject);});}function installSaveOptionalExact(d,p,c,r){log('installSaveOptionalExact');return new Promise((resolve,reject)=>{const commands=(0,_common.getCommands)(d,getInstallSaveOptionalCommands(p,c,r,true));(0,_child_process.spawn)('/bin/bash',commands,{shell:true,stdio:'inherit'},e=>!e?resolve():reject(e)).on('close',resolve).on('error',reject);});}function installSaveOptional(d,p,c,r){log('installSaveOptional');return new Promise((resolve,reject)=>{const commands=(0,_common.getCommands)(d,getInstallSaveOptionalCommands(p,c,r));(0,_child_process.spawn)('/bin/bash',commands,{shell:true,stdio:'inherit'},e=>!e?resolve():reject(e)).on('close',resolve).on('error',reject);});}function installSaveDevExact(d,p,c,r){log('installSaveDevExact');return new Promise((resolve,reject)=>{const commands=(0,_common.getCommands)(d,getInstallSaveDevCommands(p,c,r,true));(0,_child_process.spawn)('/bin/bash',commands,{shell:true,stdio:'inherit'},e=>!e?resolve():reject(e)).on('close',resolve).on('error',reject);});}function installSaveDev(d,p,c,r){log('installSaveDev');return new Promise((resolve,reject)=>{const commands=(0,_common.getCommands)(d,getInstallSaveDevCommands(p,c,r));(0,_child_process.spawn)('/bin/bash',commands,{shell:true,stdio:'inherit'},e=>!e?resolve():reject(e)).on('close',resolve).on('error',reject);});}function installSaveProdExact(d,p,c,r){log('installSaveProdExact');return new Promise((resolve,reject)=>{const commands=(0,_common.getCommands)(d,getInstallSaveProdCommands(p,c,r,true));(0,_child_process.spawn)('/bin/bash',commands,{shell:true,stdio:'inherit'},e=>!e?resolve():reject(e)).on('close',resolve).on('error',reject);});}function installSaveProd(d,p,c,r){log('installSaveProd');return new Promise((resolve,reject)=>{const commands=(0,_common.getCommands)(d,getInstallSaveProdCommands(p,c,r));(0,_child_process.spawn)('/bin/bash',commands,{shell:true,stdio:'inherit'},e=>!e?resolve():reject(e)).on('close',resolve).on('error',reject);});}async function executeBundle(directory=_common.DIRECTORY,packages={},configuration={},registry=_common.REGISTRY){log('executeBundle');const depsExact=(0,_common.getDepsExact)(packages,configuration);if(depsExact.length)await installSaveBundleExact(directory,depsExact,configuration,registry);const deps=(0,_common.getDeps)(packages);if(deps.length)await installSaveBundle(directory,deps,configuration,registry);}async function executeOptional(directory=_common.DIRECTORY,packages={},configuration={},registry=_common.REGISTRY){log('executeOptional');const depsExact=(0,_common.getDepsExact)(packages,configuration);if(depsExact.length)await installSaveOptionalExact(directory,depsExact,configuration,registry);const deps=(0,_common.getDeps)(packages);if(deps.length)await installSaveOptional(directory,deps,configuration,registry);}async function executeDev(directory=_common.DIRECTORY,packages={},configuration={},registry=_common.REGISTRY){log('executeDev');const depsExact=(0,_common.getDepsExact)(packages,configuration);if(depsExact.length)await installSaveDevExact(directory,depsExact,configuration,registry);const deps=(0,_common.getDeps)(packages);if(deps.length)await installSaveDev(directory,deps,configuration,registry);}async function executeProd(directory=_common.DIRECTORY,packages={},configuration={},registry=_common.REGISTRY){log('executeProd');const depsExact=(0,_common.getDepsExact)(packages,configuration);if(depsExact.length)await installSaveProdExact(directory,depsExact,configuration,registry);const deps=(0,_common.getDeps)(packages);if(deps.length)await installSaveProd(directory,deps,configuration,registry);}