"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _path=require("path");var _child_process=require("child_process");var _sacredFs=require("sacred-fs");var _commander=_interopRequireDefault(require("commander"));var _debug=_interopRequireDefault(require("debug"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const transform=v=>Array.isArray(v)?v.map(([module,version])=>`${module}@${version||'latest'}`).join(String.fromCharCode(32)).trim():v.trim();const install=(d,v,s,r)=>new Promise((resolve,reject)=>{const commands=['install'].concat(s?[]:['--no-save']).concat(transform(v)).concat(r?['--registry',r]:[]);(0,_child_process.spawn)(`cd "${d}" && npm`,commands,{shell:true,stdio:'inherit'},e=>!e?resolve():reject(e)).on('close',resolve).on('error',reject);});const execute=async(dir='.',dependencies={},{save,registry})=>install(dir,Object.entries(dependencies),save,registry);const error=(0,_debug.default)('deps:error');const log=(0,_debug.default)('deps:log');const app=async()=>{const{argv,env:{DEPS_PATH=process.cwd()}}=process;let PACKAGE;try{const p=(0,_path.resolve)(DEPS_PATH,'package.json');const s=await(0,_sacredFs.readFile)(p,'utf8');PACKAGE=JSON.parse(s);}catch({message}){error(message);}const{name='@modernpoacher/deps',version}=PACKAGE;log(name,version);_commander.default.version(version).option('-P, --prod [dependencies]','Install `dependencies`',false).option('-D, --dev [devDependencies]','Install `devDependencies`',false).option('-O, --optional [optionalDependencies]','Install `optionalDependencies`',false).option('-B, --bundle [bundleDependencies]','Install `bundleDependencies`',false).option('-p, --peer [peerDependencies]','Install `peerDependencies`',false).option('-s, --save [save]','Install `peerDependencies`',false).option('--registry [registry]','Installation registry').parse(argv);const{prod:P,dev:D,optional:O,bundle:B,peer:p,save,registry}=_commander.default;log({prod:P,dev:D,optional:O,bundle:B,peer:p,save,registry});if(P){const{dependencies={}}=PACKAGE;try{await execute(DEPS_PATH,dependencies,{save,registry});}catch({message}){error(message);}}else{if(D){const{devDependencies={}}=PACKAGE;try{await execute(DEPS_PATH,devDependencies,{save,registry});}catch({message}){error(message);}}else{if(O){const{optionalDependencies={}}=PACKAGE;try{await execute(DEPS_PATH,optionalDependencies,{save,registry});}catch({message}){error(message);}}else{if(B){const{bundleDependencies={}}=PACKAGE;try{await execute(DEPS_PATH,bundleDependencies,{save,registry});}catch({message}){error(message);}}else{if(p){const{peerDependencies={}}=PACKAGE;try{await execute(DEPS_PATH,peerDependencies,{save,registry});}catch({message}){error(message);}}}}}}};var _default=app();exports.default=_default;